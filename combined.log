info: Server started [15:26:15:172 31.1.2019]
request: [15:26:15:177 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"9b7c4be0-ccbf-4b30-934f-1199f3ee7d0f","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":68}}
info: Server started [15:27:19:454 31.1.2019]
request: [15:27:19:462 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"94bafe07-bea7-4283-8105-e6ec99bb8543","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":71}}
info: Server started [15:28:10:744 31.1.2019]
request: [15:28:10:751 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"0adb0495-58f1-4b8c-a74a-06a186b39d59","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":67}}
info: Server started [15:28:31:903 31.1.2019]
request: [15:28:31:908 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"bb5b2880-473d-4908-9828-d9583140a3e5","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":65}}
info: Server started [15:36:51:137 31.1.2019]
request: [15:36:51:137 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"6f8db9a6-cf0b-41d8-8a3b-0d8058abf996","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":68}}
response: [15:36:51:137 31.1.2019] >> { statusCode:200, responseTime:68 } {"meta":{"res":{"statusCode":200},"responseTime":68}}
info: Server started [15:38:52:267 31.1.2019]
info: Server started [15:39:2:459 31.1.2019]
request: [15:39:2:459 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"eed27d3b-49f3-41af-b212-614066f35a70","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":63}}
info: Server started [15:39:14:570 31.1.2019]
request: [15:39:14:585 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"b8b8bf93-6158-47be-8202-9c54c6918895","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":81}}
info: Server started [15:41:14:41 31.1.2019]
request: [15:41:14:76 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"0368ed6e-70c0-47f8-8ae2-43c75ede55c7","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":82}}
info: Server started [15:42:5:798 31.1.2019]
request: [15:42:5:833 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"4a22d9bd-dcf1-498a-b68a-619d9df84820","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":82}}
info: Server started [15:42:39:874 31.1.2019]
request: [15:42:39:898 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"b7e407ae-a71f-4343-9dbd-4d594eb17782","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":63}}
response: [15:42:39:900 31.1.2019] >> { statusCode:200, responseTime:63 } {"meta":{"res":{"statusCode":200},"responseTime":63}}
info: Server started [15:43:23:275 31.1.2019]
request: [15:43:23:300 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"3de3d7f2-d05c-4a44-8348-8d1236b81f7b","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":77}}
response: [15:43:23:302 31.1.2019] >> { statusCode:200, responseTime:77 } {"meta":{"res":{"statusCode":200},"responseTime":77}}
info: Server started [15:44:2:861 31.1.2019]
request: [15:44:2:889 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"9feb9d2e-96b7-457b-a30b-3ef01fced5b9","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":76}}
info: Server started [15:44:17:696 31.1.2019]
request: [15:44:17:727 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"cce39927-708b-4a38-8f6d-11bebba86b80","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":63}}
response: [15:44:17:729 31.1.2019] >> { statusCode:200, responseTime:63 } {"meta":{"res":{"statusCode":200},"responseTime":63}}
info: Server started [15:44:54:540 31.1.2019]
request: [15:44:54:576 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"f7b53a1a-fa09-428e-ae38-3d7db0583398","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":82}}
response: [15:44:54:578 31.1.2019] >> { statusCode:200, responseTime:82 } {"meta":{"res":{"statusCode":200},"responseTime":82}}
info: Server started [15:45:43:196 31.1.2019]
request: [15:45:43:220 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"36fef31c-1f8a-4dc8-8575-7b0d03761579","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":80}}
response: [15:45:43:222 31.1.2019] >> { statusCode:200, responseTime:80 } {"meta":{"res":{"statusCode":200},"responseTime":80}}
info: Server started [15:46:49:59 31.1.2019]
request: [15:46:49:84 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"e2a51bba-23f5-4823-8393-aea08aa10751","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":88}}
response: [15:46:49:86 31.1.2019] >> { statusCode:200, responseTime:88 } {"meta":{"res":{"statusCode":200},"responseTime":88}}
info: Server started [15:47:0:614 31.1.2019]
request: [15:47:0:650 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"751a020e-4009-4868-96e1-247bd643c483","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":82}}
response: [15:47:0:652 31.1.2019] >> { statusCode:200, responseTime:82 } {"meta":{"res":{"statusCode":200},"responseTime":82}}
info: Server started [15:47:30:234 31.1.2019]
request: [15:47:30:252 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"6b46cd7e-e176-41ca-8217-dc7da571a399","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":78}}
info: Server started [15:48:11:177 31.1.2019]
request: [15:48:11:200 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"88837b70-b339-477a-9bc0-6425bb2eee1e","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":62}}
response: [15:48:11:200 31.1.2019] >> { statusCode:200, responseTime:62 } {"meta":{"res":{"statusCode":200},"responseTime":62}}
info: Server started [15:48:46:893 31.1.2019]
request: [15:48:46:909 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"5b153a02-0007-4098-9553-f398b00f20ec","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":63}}
response: [15:48:46:909 31.1.2019] >> { statusCode:200, responseTime:63 } {"meta":{"res":{"statusCode":200},"responseTime":63}}
info: Server started [15:49:26:759 31.1.2019]
request: [15:49:26:785 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"d1fa10d2-48f1-4edc-8a87-c4b8ef5fc097","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":76}}
response: [15:49:26:786 31.1.2019] >> { statusCode:200, responseTime:76 } {"meta":{"res":{"statusCode":200},"responseTime":76}}
info: Server started [15:51:6:557 31.1.2019]
request: [15:51:6:591 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"d7ebee3e-a9b1-46c8-aeda-91c7b706cc09","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":73}}
response: [15:51:6:592 31.1.2019] >> { statusCode:200, responseTime:73 } {"meta":{"res":{"statusCode":200},"responseTime":73}}
info: Server started []
info: Server started [15:51:29:291 31.1.2019]
request: [15:51:29:322 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"2b1a979a-c554-4a25-9491-560e3a1451a2","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":84}}
response: [15:51:29:324 31.1.2019] >> { statusCode:200, responseTime:84 } {"meta":{"res":{"statusCode":200},"responseTime":84}}
info: Server started [15:53:1:987 31.1.2019]
request: [15:53:2:23 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"8368abc4-9738-4348-873e-f08a9b33790d","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":83}}
response: [15:53:2:24 31.1.2019] >> { statusCode:200, responseTime:83 } {"meta":{"res":{"statusCode":200},"responseTime":83}}
info: Server started [15:53:39:903 31.1.2019]
request: [15:53:39:930 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"15365e3f-e4fd-43d9-8cd7-9a4c57cc5ff4","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":65}}
response: [15:53:39:932 31.1.2019] >> { statusCode:200, responseTime:65 } {"meta":{"res":{"statusCode":200},"responseTime":65}}
info: global error handler >>Querry error (id:65) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"type":"Error","name":"Rollback","stack":"Rollback: Querry error (id:65) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.connection.rollback.error (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:32:34)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)"}
info: Server started [15:55:27:852 31.1.2019]
request: [15:55:27:879 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"e820734f-6625-41d9-8ce2-9cbbdbeb354c","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":62}}
response: [15:55:27:880 31.1.2019] >> { statusCode:200, responseTime:62 } {"meta":{"res":{"statusCode":200},"responseTime":62}}
error: global error handler >>Querry error (id:66) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"type":"Error","name":"Rollback","stack":"Rollback: Querry error (id:66) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.connection.rollback.error (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:32:34)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)"}
info: Server started [15:56:15:2 31.1.2019]
request: [15:56:15:31 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"455d199d-d495-4ebb-a7a0-457c4c236436","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":63}}
response: [15:56:15:33 31.1.2019] >> { statusCode:200, responseTime:63 } {"meta":{"res":{"statusCode":200},"responseTime":63}}
error: global error handler >> {"meta":{"type":"Error","message":"Querry error (id:67) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","name":"Rollback","stack":"Rollback: Querry error (id:67) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.connection.rollback.error (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:32:34)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)"}}
info: Server started [15:57:36:667 31.1.2019]
request: [15:57:36:694 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"e5d243b6-7b60-486f-b1a6-011b833d6f2f","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":68}}
response: [15:57:36:695 31.1.2019] >> { statusCode:200, responseTime:68 } {"meta":{"res":{"statusCode":200},"responseTime":68}}
error: global error handler >> {"meta":{"err":{"name":"Rollback"}}}
info: Server started [15:58:13:421 31.1.2019]
request: [15:58:13:451 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"3e1d0fbd-2991-48ce-81e0-bf2e64535923","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":78}}
response: [15:58:13:453 31.1.2019] >> { statusCode:200, responseTime:78 } {"meta":{"res":{"statusCode":200},"responseTime":78}}
error: global error handler >> {"err":{"name":"Rollback"}}
info: Server started [15:58:54:472 31.1.2019]
request: [15:58:54:511 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"4c7d9f91-89f1-4c94-af75-5e48cb204e44","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":71}}
response: [15:58:54:513 31.1.2019] >> { statusCode:200, responseTime:71 } {"meta":{"res":{"statusCode":200},"responseTime":71}}
error: global error handler >> {"err":{"name":"Rollback"}}
info: Server started [16:0:40:995 31.1.2019]
request: [16:0:41:10 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"c759cf78-268f-49a7-8db4-e64e7abe2941","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":84}}
response: [16:0:41:10 31.1.2019] >> { statusCode:200, responseTime:84 } {"meta":{"res":{"statusCode":200},"responseTime":84}}
error: global error handler >>Querry error (id:71) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"0":{"type":"Error","message":"Querry error (id:71) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","name":"Rollback","stack":"Rollback: Querry error (id:71) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.connection.rollback.error (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:32:34)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)"}}
info: Server started [16:24:35:784 31.1.2019]
request: [16:24:35:818 31.1.2019] >> { method:GET, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"8fc1c782-feed-48a9-a997-321e65953ade","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"GET","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10071}}
response: [16:24:35:819 31.1.2019] >> { statusCode:200, responseTime:10071 } {"meta":{"res":{"statusCode":200},"responseTime":10071}}
request: [16:24:35:818 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"d7fc7d34-d59e-48e9-bb2e-6a5295681913","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10028}}
response: [16:24:35:819 31.1.2019] >> { statusCode:200, responseTime:10028 } {"meta":{"res":{"statusCode":200},"responseTime":10028}}
error: Error handler >> test {"0":{"type":"Error","message":"test","name":"Error","stack":"Error: test\n    at Query.connection.beginTransaction.err (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:25:15)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:396:18\n    at Array.forEach (<anonymous>)\n    at D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:395:13\n    at process._tickCallback (internal/process/next_tick.js:61:11)"}}
info: Server started [16:26:20:909 31.1.2019]
request: [16:26:20:924 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"ac6f3af3-c291-43a2-add4-846caaff76d0","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10047}}
response: [16:26:20:940 31.1.2019] >> { statusCode:503, responseTime:10047 } {"meta":{"res":{"statusCode":503},"responseTime":10047}}
error: Error handler >> connect ETIMEDOUT {"0":{"type":"Error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:6:14)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:16:28)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:62:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:131:14)\n    at Route.dispatch (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:112:3)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
error: Error handler >> Cannot set headers after they are sent to the client {"0":{"type":"Error","message":"Cannot set headers after they are sent to the client","name":"Error [ERR_HTTP_HEADERS_SENT]","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:470:11)\n    at ServerResponse.header (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.send (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\response.js:170:12)\n    at Query.connection.beginTransaction.err (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:19:13)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:396:18\n    at Array.forEach (<anonymous>)\n    at D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:395:13","code":"ERR_HTTP_HEADERS_SENT"}}
info: Server started [16:28:17:140 31.1.2019]
request: [16:28:17:173 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"dbad54c9-8697-4308-8b31-600e76711537","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10053}}
response: [16:28:17:175 31.1.2019] >> { statusCode:503, responseTime:10053 } {"meta":{"res":{"statusCode":503},"responseTime":10053}}
error: Error handler >> Cannot set headers after they are sent to the client {"0":{"type":"Error","message":"Cannot set headers after they are sent to the client","name":"Error [ERR_HTTP_HEADERS_SENT]","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:470:11)\n    at ServerResponse.header (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.send (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\response.js:170:12)\n    at Query.connection.beginTransaction.err (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:19:13)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:396:18\n    at Array.forEach (<anonymous>)\n    at D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:395:13","code":"ERR_HTTP_HEADERS_SENT"}}
info: Server started [16:29:18:716 31.1.2019]
request: [16:29:18:741 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"270e7179-8374-4eb7-9142-bc08e65d832e","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10046}}
response: [16:29:18:743 31.1.2019] >> { statusCode:503, responseTime:10046 } {"meta":{"res":{"statusCode":503},"responseTime":10046}}
error: Error handler >> test {"0":{"type":"Error","message":"test","name":"Error","stack":"Error: test\n    at Query.connection.beginTransaction.err (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:20:15)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:396:18\n    at Array.forEach (<anonymous>)\n    at D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:395:13\n    at process._tickCallback (internal/process/next_tick.js:61:11)"}}
info: Server started [16:38:46:829 31.1.2019]
request: [16:38:46:861 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"bddf17d7-10c4-440c-b28c-ddba449c426b","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":40}}
response: [16:38:46:861 31.1.2019] >> { statusCode:500, responseTime:40 } {"meta":{"res":{"statusCode":500},"responseTime":40}}
info: Server started [16:40:44:590 31.1.2019]
request: [16:40:44:617 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"1d2554a0-eb63-4f09-8e8a-d2c0d4967255","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":47}}
response: [16:40:44:618 31.1.2019] >> { statusCode:500, responseTime:47 } {"meta":{"res":{"statusCode":500},"responseTime":47}}
info: Server started [18:26:51:726 31.1.2019]
info: Server started [18:26:57:392 31.1.2019]
error: uncaughtException >> connect ETIMEDOUT {"0":{"type":"Error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:34)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:72:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [18:28:38:243 31.1.2019]
info: MySQL (id:15) database connected
request: [18:28:38:286 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"f05a15c6-aab1-447a-95ef-87f1b9480533","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":76}}
response: [18:28:38:288 31.1.2019] >> { statusCode:500, responseTime:76 } {"meta":{"res":{"statusCode":500},"responseTime":76}}
error: uncaughtException >> Querry error (id:15) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"0":{"type":"Error","message":"Querry error (id:15) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","name":"Rollback","stack":"Rollback: Querry error (id:15) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.connection.rollback.error (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:35:36)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)"}}
error: uncaughtException >> Cannot create property 'Symbol(level)' on string 'MySQL (id:15) database disconected' {"0":{"type":"TypeError","message":"Cannot create property 'Symbol(level)' on string 'MySQL (id:15) database disconected'","name":"TypeError","stack":"TypeError: Cannot create property 'Symbol(level)' on string 'MySQL (id:15) database disconected'\n    at DerivedLogger.log (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\winston\\lib\\winston\\logger.js:208:20)\n    at Quit.connection.end.err (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:22:14)\n    at Quit.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Quit._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Quit.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Quit.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Quit.js:34:26)\n    at Protocol.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:107:24)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:97:28)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:187:15)"}}
info: Server started [18:29:56:539 31.1.2019]
info: MySQL (id:16) database connected
request: [18:29:56:569 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"847ac477-ff28-42e1-aa24-f2ae701c2035","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":95}}
response: [18:29:56:571 31.1.2019] >> { statusCode:500, responseTime:95 } {"meta":{"res":{"statusCode":500},"responseTime":95}}
error: uncaughtException >> Querry error (id:16) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"0":{"type":"Error","message":"Querry error (id:16) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","name":"Rollback","stack":"Rollback: Querry error (id:16) >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.connection.rollback.error (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:35:36)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)"}}
info: MySQL (id:16) database disconected
info: Server started [18:30:56:162 31.1.2019]
info: Server started [18:33:18:380 31.1.2019]
info: Server started [18:34:43:120 31.1.2019]
request: [18:34:43:153 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"f3d84078-fe5d-4251-8140-225ec7705751","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10063}}
response: [18:34:43:154 31.1.2019] >> { statusCode:503, responseTime:10063 } {"meta":{"res":{"statusCode":503},"responseTime":10063}}
error: Cant reach MySQL database >> connect ETIMEDOUT {"0":{"type":"Error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:72:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
request: [18:34:43:153 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"5251281f-5e6d-414d-9052-f75ed8efa9c9","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10002}}
response: [18:34:43:154 31.1.2019] >> { statusCode:503, responseTime:10002 } {"meta":{"res":{"statusCode":503},"responseTime":10002}}
error: Cant reach MySQL database >> connect ETIMEDOUT {"0":{"type":"Error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:72:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [18:36:28:474 31.1.2019]
info: Server started [18:39:47:404 31.1.2019]
info: Server started [18:42:10:406 31.1.2019]
info: Server started [18:46:21:152 31.1.2019]
request: [18:46:21:188 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"54c8b1cc-1f03-4c77-8cc5-48c229321249","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":47}}
response: [18:46:21:189 31.1.2019] >> { statusCode:500, responseTime:47 } {"meta":{"res":{"statusCode":500},"responseTime":47}}
error: undefined >> connect ETIMEDOUT {"0":{"type":"Error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:8:14)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:73:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:131:14)\n    at Route.dispatch (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:112:3)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [18:50:57:550 31.1.2019]
info: Server started [18:52:4:604 31.1.2019]
request: [18:52:4:620 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"97218add-2a84-4b1a-8dae-e925a58ac93d","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10079}}
response: [18:52:4:620 31.1.2019] >> { statusCode:503, responseTime:10079 } {"meta":{"res":{"statusCode":503},"responseTime":10079}}
error: Cant reach MySQL database >> connect ETIMEDOUT {"0":{"type":"Error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:8:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:6:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:76:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [18:53:5:970 31.1.2019]
request: [18:53:6:7 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"120ba4a0-5835-4289-8e07-e7e9c6137982","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10057}}
response: [18:53:6:9 31.1.2019] >> { statusCode:503, responseTime:10057 } {"meta":{"res":{"statusCode":503},"responseTime":10057}}
error: Cant reach MySQL database >> connect ETIMEDOUT {"0":{"type":"Error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:75:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
request: [18:53:6:7 31.1.2019] >> { method:GET, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"0257cea4-c888-456b-881a-958c275f83de","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"GET","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":0}}
response: [18:53:6:9 31.1.2019] >> { statusCode:500, responseTime:0 } {"meta":{"res":{"statusCode":500},"responseTime":0}}
info: MySQL (id:15) database connected
info: Server started [18:55:50:199 31.1.2019]
request: [18:55:50:238 31.1.2019] >> { method:GET, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"81dc9f81-d6de-43b1-9b45-fc18700c74c8","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"GET","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":47}}
response: [18:55:50:240 31.1.2019] >> { statusCode:500, responseTime:47 } {"meta":{"res":{"statusCode":500},"responseTime":47}}
info: MySQL (id:16) database connected
info: MySQL (id:17) database connected
info: MySQL (id:17) database disconected
info: Server started [20:52:23:345 31.1.2019]
info: MySQL (id:18) database connected
info: MySQL (id:18) database disconected
info: MySQL (id:19) database connected
info: MySQL (id:19) database disconected
info: Server started [20:53:14:990 31.1.2019]
info: MySQL (id:20) database connected
request: [20:53:15:17 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"dd10f89a-5372-4d97-8143-3035d903a527","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":97}}
response: [20:53:15:19 31.1.2019] >> { statusCode:200, responseTime:97 } {"meta":{"res":{"statusCode":200},"responseTime":97}}
info: MySQL (id:20) database disconected
info: Server started [20:54:19:195 31.1.2019]
info: MySQL (id:21) database connected
request: test[20:54:19:223 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"166ab10b-8af1-45fd-9915-6ed829836ab0","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":104}}
response: test[20:54:19:225 31.1.2019] >> { statusCode:200, responseTime:104 } {"meta":{"res":{"statusCode":200},"responseTime":104}}
info: MySQL (id:21) database disconected
info: Server started [20:58:5:287 31.1.2019]
info: MySQL (id:22) database connected
request: [20:58:5:315 31.1.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"751ac812-daa1-4e7a-aad9-3824780238a1","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":101}}
response: [20:58:5:317 31.1.2019] >> { statusCode:200, responseTime:101 } {"meta":{"res":{"statusCode":200},"responseTime":101}}
info: MySQL (id:22) database disconected
[33minfo[39m:    Server started [14:39:36:204 1.2.2019]
info: Server started [14:42:6:836 1.2.2019]
info: Server started [14:42:15:97 1.2.2019]
error: Cant reach MySQL database >> connect ETIMEDOUT {"0":{"type":"Error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:75:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [14:55:21:68 1.2.2019]
error: MySQL error >> connect ETIMEDOUT {"0":{"type":"MySQL error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:81:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [14:56:55:539 1.2.2019]
info: Server started [14:58:30:462 1.2.2019]
info: MySQL (id:16) database connected
request: [14:58:30:490 1.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"7e6fd1ee-2f70-474d-aa2f-7f2ff0674560","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":129}}
response: [14:58:30:492 1.2.2019] >> { statusCode:500, responseTime:129 } {"meta":{"res":{"statusCode":500},"responseTime":129}}
error: Query error >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"0":{"type":"Query error","message":"ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","name":"Error","stack":"Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.Sequence._packetToError (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:31:20)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"ER_PARSE_ERROR","errno":1064,"sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","sqlState":"42000","index":0,"sql":"INSERT INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840)"}}
info: MySQL (id:16) database disconected
info: Server started [15:1:12:149 1.2.2019]
error: MySQL error >> connect ETIMEDOUT {"0":{"type":"MySQL error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:82:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [15:20:29:221 1.2.2019]
error: MySQL error >> connect ETIMEDOUT {"0":{"type":"MySQL error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:82:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [15:23:6:943 1.2.2019]
error: MySQL error >> connect ETIMEDOUT {"0":{"type":"MySQL error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:82:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [15:27:6:282 1.2.2019]
request: [15:27:6:312 1.2.2019] >> { method:GET, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"495282d9-2032-47b0-b8d4-40c49e47700a","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"GET","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":69}}
response: [15:27:6:314 1.2.2019] >> { statusCode:500, responseTime:69 } {"meta":{"res":{"statusCode":500},"responseTime":69}}
info: MySQL (id:17) database connected
info: Server started [15:28:38:461 1.2.2019]
request: [15:28:38:489 1.2.2019] >> { method:GET, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"90d0e8c8-9bce-40c2-8824-e75776f8251e","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"GET","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":63}}
response: [15:28:38:491 1.2.2019] >> { statusCode:500, responseTime:63 } {"meta":{"res":{"statusCode":500},"responseTime":63}}
info: MySQL (id:18) database connected
info: Server started [15:29:3:405 1.2.2019]
info: Server started [15:29:17:533 1.2.2019]
request: [15:29:17:566 1.2.2019] >> { method:GET, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"4456dade-b393-4585-8628-4f900c486b21","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"GET","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":47}}
response: [15:29:17:568 1.2.2019] >> { statusCode:500, responseTime:47 } {"meta":{"res":{"statusCode":500},"responseTime":47}}
info: MySQL (id:19) database connected
info: Server started [15:31:37:303 1.2.2019]
request: [15:31:37:342 1.2.2019] >> { method:GET, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"c7555dcc-e0bd-4772-9979-bb36782f8bc7","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"GET","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":66}}
response: [15:31:37:343 1.2.2019] >> { statusCode:500, responseTime:66 } {"meta":{"res":{"statusCode":500},"responseTime":66}}
error: MySQL error >> connect ETIMEDOUT {"0":{"type":"MySQL error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:82:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [15:33:38:522 1.2.2019]
error: MySQL error >> connect ETIMEDOUT {"0":{"type":"MySQL error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:83:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [15:35:5:800 1.2.2019]
error: MySQL error >> connect ETIMEDOUT {"0":{"type":"MySQL error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:82:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [15:39:14:453 1.2.2019]
error: MySQL connection error >> connect ETIMEDOUT {"0":{"type":"MySQL connection error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:82:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [15:48:59:807 1.2.2019]
request: [15:48:59:845 1.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"fac7ac11-5b29-4f56-b40d-40184c082cef","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10066}}
response: [15:48:59:847 1.2.2019] >> { statusCode:500, responseTime:10066 } {"meta":{"res":{"statusCode":500},"responseTime":10066}}
error: transaction error >> connect ETIMEDOUT {"0":{"type":"transaction error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:89:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [15:50:48:383 1.2.2019]
request: [15:50:48:412 1.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"74f30ee2-f397-4811-b1ee-6a637171ad82","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":10057}}
response: [15:50:48:414 1.2.2019] >> { statusCode:503, responseTime:10057 } {"meta":{"res":{"statusCode":503},"responseTime":10057}}
error: MySQL connection error >> connect ETIMEDOUT {"0":{"type":"MySQL connection error","message":"connect ETIMEDOUT","name":"Error","stack":"Error: connect ETIMEDOUT\n    at Connection._handleConnectTimeout (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:411:13)\n    at Object.onceWrapper (events.js:273:13)\n    at Socket.emit (events.js:182:13)\n    at Socket._onTimeout (net.js:453:8)\n    at ontimeout (timers.js:436:11)\n    at tryOnTimeout (timers.js:300:5)\n    at listOnTimeout (timers.js:263:5)\n    at Timer.processTimers (timers.js:223:10)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:89:5)\n    at Layer.handle [as handle_request] (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ETIMEDOUT","syscall":"connect","errorno":"ETIMEDOUT","fatal":true}}
info: Server started [15:52:51:691 1.2.2019]
info: MySQL (id:20) database connected
request: [15:52:51:718 1.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"720f50c2-c579-4a30-95be-a8c5d2aa15cf","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":97}}
response: [15:52:51:720 1.2.2019] >> { statusCode:500, responseTime:97 } {"meta":{"res":{"statusCode":500},"responseTime":97}}
error: uncaughtException >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"0":{"type":"uncaughtException","message":"ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","name":"Error","stack":"Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.Sequence._packetToError (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:30:20)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"ER_PARSE_ERROR","errno":1064,"sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","sqlState":"42000","index":0,"sql":"INSERT INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840)"}}
info: MySQL (id:20) database disconected
info: Server started [15:54:44:224 1.2.2019]
info: MySQL (id:21) database connected
request: [15:54:44:251 1.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"369f59fe-fdfb-4266-a561-3c5f61764d16","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":78}}
response: [15:54:44:252 1.2.2019] >> { statusCode:500, responseTime:78 } {"meta":{"res":{"statusCode":500},"responseTime":78}}
error: uncaughtException >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"0":{"type":"uncaughtException","message":"ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","name":"Error","stack":"Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.Sequence._packetToError (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:30:20)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"ER_PARSE_ERROR","errno":1064,"sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","sqlState":"42000","index":0,"sql":"INSERT INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840)"}}
info: MySQL (id:21) database disconected
info: Server started [15:57:29:189 1.2.2019]
info: MySQL (id:24) database connected
request: [15:57:29:220 1.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"598800a8-4bd4-4449-a742-e9cd586e1732","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"192.168.0.232:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":92}}
response: [15:57:29:221 1.2.2019] >> { statusCode:500, responseTime:92 } {"meta":{"res":{"statusCode":500},"responseTime":92}}
error: Query error >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"0":{"type":"Query error","message":"ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","name":"Error","stack":"Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.Sequence._packetToError (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\services\\index.js:30:20)\n    at Query.<anonymous> (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (D:\\WorkSpace\\camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"ER_PARSE_ERROR","errno":1064,"sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","sqlState":"42000","index":0,"sql":"INSERT INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840)"}}
info: MySQL (id:24) database disconected
info: Server started [16:2:40:987 1.2.2019]
info: Server started [12:22:17:231 2.2.2019]
info: MySQL (id:16) database connected
request: [12:22:17:314 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"0200a1e1-f18a-41fe-a605-0665fcaff4d0","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":416}}
response: [12:22:17:317 2.2.2019] >> { statusCode:500, responseTime:416 } {"meta":{"res":{"statusCode":500},"responseTime":416}}
error: Query error >> ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1 {"json":{"type":"Query error","message":"ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","name":"Error","stack":"Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1\n    at Query.Sequence._packetToError (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:31:20)\n    at Query.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"ER_PARSE_ERROR","errno":1064,"sqlMessage":"You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test' at line 1","sqlState":"42000","index":0,"sql":"INSERT INT books (name, author_id, year) VALUES ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840), ('Update test', 2, 1840)"}}
info: MySQL (id:16) database disconected
request: [12:22:17:314 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"24c7688c-f236-4372-80cd-6bdbb3ad516c","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":1017}}
response: [12:22:17:317 2.2.2019] >> { statusCode:503, responseTime:1017 } {"meta":{"res":{"statusCode":503},"responseTime":1017}}
error: MySQL connection error >> connect ECONNREFUSED 127.0.0.1:3306 {"json":{"type":"MySQL connection error","message":"connect ECONNREFUSED 127.0.0.1:3306","name":"Error","stack":"Error: connect ECONNREFUSED 127.0.0.1:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1117:14)\n    --------------------\n    at Protocol._enqueue (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:90:5)\n    at Layer.handle [as handle_request] (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ECONNREFUSED","errno":"ECONNREFUSED","syscall":"connect","address":"127.0.0.1","port":3306,"fatal":true}}
info: Server started [12:30:56:76 2.2.2019]
error: MySQL connection error >> connect ECONNREFUSED 127.0.0.1:3306 {"json":{"type":"MySQL connection error","message":"connect ECONNREFUSED 127.0.0.1:3306","name":"Error","stack":"Error: connect ECONNREFUSED 127.0.0.1:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1117:14)\n    --------------------\n    at Protocol._enqueue (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:90:5)\n    at Layer.handle [as handle_request] (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ECONNREFUSED","errno":"ECONNREFUSED","syscall":"connect","address":"127.0.0.1","port":3306,"fatal":true}}
info: Server started [12:33:24:488 2.2.2019]
request: [12:33:24:531 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"94f8861d-2991-4efa-9530-2f2b3bf69b4a","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"17802","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":1129}}
response: [12:33:24:534 2.2.2019] >> { statusCode:503, responseTime:1129 } {"meta":{"res":{"statusCode":503},"responseTime":1129}}
error: MySQL connection error >> connect ECONNREFUSED 127.0.0.1:3306 {"json":{"type":"MySQL connection error","message":"connect ECONNREFUSED 127.0.0.1:3306","name":"Error","stack":"Error: connect ECONNREFUSED 127.0.0.1:3306\n    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1117:14)\n    --------------------\n    at Protocol._enqueue (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Protocol.handshake (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:51:23)\n    at Connection.connect (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:118:18)\n    at Promise (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:7:14)\n    at new Promise (<anonymous>)\n    at Object.exports.newConnection (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\modules\\MySQL.js:5:31)\n    at bulkCreate (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:17:9)\n    at exports.addBook (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:90:5)\n    at Layer.handle [as handle_request] (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\express\\lib\\router\\route.js:137:13)","code":"ECONNREFUSED","errno":"ECONNREFUSED","syscall":"connect","address":"127.0.0.1","port":3306,"fatal":true}}
info: Server started [12:53:36:305 2.2.2019]
request: [12:53:36:344 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"8deed5b2-f9c9-425e-b0da-83a3fd3d40b6","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"67","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":101}}
response: [12:53:36:347 2.2.2019] >> { statusCode:500, responseTime:101 } {"meta":{"res":{"statusCode":500},"responseTime":101}}
info: MySQL (id:9) database connected
info: Server started [12:54:39:384 2.2.2019]
info: MySQL (id:10) database connected
request: [12:54:39:426 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"b5e427c6-b99d-4eb4-82ac-45166918c9c2","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"67","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":143}}
response: [12:54:39:429 2.2.2019] >> { statusCode:200, responseTime:143 } {"meta":{"res":{"statusCode":200},"responseTime":143}}
info: MySQL (id:10) database disconected
info: MySQL (id:11) database connected
request: [12:54:39:426 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"867b35a6-be84-4420-919b-8a0a50ffe062","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"72","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":12}}
response: [12:54:39:429 2.2.2019] >> { statusCode:500, responseTime:12 } {"meta":{"res":{"statusCode":500},"responseTime":12}}
error: Query error >> WARN_DATA_TRUNCATED: Data truncated for column 'author_id' at row 1 {"json":{"type":"Query error","message":"WARN_DATA_TRUNCATED: Data truncated for column 'author_id' at row 1","name":"Error","stack":"Error: WARN_DATA_TRUNCATED: Data truncated for column 'author_id' at row 1\n    at Query.Sequence._packetToError (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:108:20)\n    at Query.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"WARN_DATA_TRUNCATED","errno":1265,"sqlMessage":"Data truncated for column 'author_id' at row 1","sqlState":"01000","index":0,"sql":"INSERT INTO books (name, author_id, year)\n      VALUES ('Update test', '2sad', 1840)"}}
info: MySQL (id:11) database disconected
info: Server started [12:57:36:399 2.2.2019]
info: MySQL (id:18) database connected
request: [12:57:36:449 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"feee95d0-3d0e-4445-b79f-ed9bc0bfd55b","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"67","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":131}}
response: [12:57:36:452 2.2.2019] >> { statusCode:200, responseTime:131 } {"meta":{"res":{"statusCode":200},"responseTime":131}}
info: MySQL (id:18) database disconected
info: MySQL (id:19) database connected
request: [12:57:36:449 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"6cee30ca-fcd5-433f-97e4-156baacd741d","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"69","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":24}}
response: [12:57:36:452 2.2.2019] >> { statusCode:200, responseTime:24 } {"meta":{"res":{"statusCode":200},"responseTime":24}}
info: MySQL (id:19) database disconected
info: MySQL (id:20) database connected
request: [12:57:36:449 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"0010a01e-7683-411f-b9d8-0fdb229b68f2","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"71","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":30}}
response: [12:57:36:452 2.2.2019] >> { statusCode:500, responseTime:30 } {"meta":{"res":{"statusCode":500},"responseTime":30}}
error: Query error >> ER_NO_REFERENCED_ROW_2: Cannot add or update a child row: a foreign key constraint fails (`mydb`.`books`, CONSTRAINT `author_id` FOREIGN KEY (`author_id`) REFERENCES `authors` (`id`)) {"json":{"type":"Query error","message":"ER_NO_REFERENCED_ROW_2: Cannot add or update a child row: a foreign key constraint fails (`mydb`.`books`, CONSTRAINT `author_id` FOREIGN KEY (`author_id`) REFERENCES `authors` (`id`))","name":"Error","stack":"Error: ER_NO_REFERENCED_ROW_2: Cannot add or update a child row: a foreign key constraint fails (`mydb`.`books`, CONSTRAINT `author_id` FOREIGN KEY (`author_id`) REFERENCES `authors` (`id`))\n    at Query.Sequence._packetToError (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:108:20)\n    at Query.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"ER_NO_REFERENCED_ROW_2","errno":1452,"sqlMessage":"Cannot add or update a child row: a foreign key constraint fails (`mydb`.`books`, CONSTRAINT `author_id` FOREIGN KEY (`author_id`) REFERENCES `authors` (`id`))","sqlState":"23000","index":0,"sql":"INSERT INTO books (name, author_id, year)\n      VALUES ('Update test', false, 1840)"}}
info: MySQL (id:20) database disconected
info: MySQL (id:21) database connected
request: [12:57:36:449 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"54674eff-fa83-4d90-9285-6d4e3ea497aa","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"71","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":24}}
response: [12:57:36:452 2.2.2019] >> { statusCode:500, responseTime:24 } {"meta":{"res":{"statusCode":500},"responseTime":24}}
error: Query error >> ER_TRUNCATED_WRONG_VALUE_FOR_FIELD: Incorrect integer value: 'ras' for column 'author_id' at row 1 {"json":{"type":"Query error","message":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD: Incorrect integer value: 'ras' for column 'author_id' at row 1","name":"Error","stack":"Error: ER_TRUNCATED_WRONG_VALUE_FOR_FIELD: Incorrect integer value: 'ras' for column 'author_id' at row 1\n    at Query.Sequence._packetToError (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:108:20)\n    at Query.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"ER_TRUNCATED_WRONG_VALUE_FOR_FIELD","errno":1366,"sqlMessage":"Incorrect integer value: 'ras' for column 'author_id' at row 1","sqlState":"HY000","index":0,"sql":"INSERT INTO books (name, author_id, year)\n      VALUES ('Update test', 'ras', 1840)"}}
info: MySQL (id:21) database disconected
info: Server started [13:5:32:671 2.2.2019]
info: MySQL (id:22) database connected
request: [13:5:32:720 2.2.2019] >> { method:POST, url:/authors/ } {"meta":{"req":{"url":"/authors/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"6201110e-4f24-42af-a425-936ab34dfa33","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"29","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/authors/","query":{}},"responseTime":132}}
response: [13:5:32:724 2.2.2019] >> { statusCode:200, responseTime:132 } {"meta":{"res":{"statusCode":200},"responseTime":132}}
info: MySQL (id:22) database disconected
info: MySQL (id:23) database connected
request: [13:5:32:720 2.2.2019] >> { method:POST, url:/authors/ } {"meta":{"req":{"url":"/authors/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"e137ebda-b5ae-4331-a77b-5c537d04b40f","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"19","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/authors/","query":{}},"responseTime":24}}
response: [13:5:32:724 2.2.2019] >> { statusCode:200, responseTime:24 } {"meta":{"res":{"statusCode":200},"responseTime":24}}
info: MySQL (id:23) database disconected
info: MySQL (id:24) database connected
request: [13:5:32:720 2.2.2019] >> { method:POST, url:/authors/ } {"meta":{"req":{"url":"/authors/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"a64460fb-3880-4a92-90a0-3e4d9eaa6bf3","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"21","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/authors/","query":{}},"responseTime":17}}
response: [13:5:32:724 2.2.2019] >> { statusCode:200, responseTime:17 } {"meta":{"res":{"statusCode":200},"responseTime":17}}
info: MySQL (id:24) database disconected
info: MySQL (id:25) database connected
request: [13:5:32:720 2.2.2019] >> { method:POST, url:/authors/ } {"meta":{"req":{"url":"/authors/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"394cc61b-8d0b-40d5-8802-cc54e4b291e7","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"4","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/authors/","query":{}},"responseTime":16}}
response: [13:5:32:724 2.2.2019] >> { statusCode:200, responseTime:16 } {"meta":{"res":{"statusCode":200},"responseTime":16}}
info: MySQL (id:25) database disconected
info: MySQL (id:26) database connected
request: [13:5:32:720 2.2.2019] >> { method:POST, url:/authors/ } {"meta":{"req":{"url":"/authors/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"5fe824ba-6018-4b8e-a2be-3e77cd8f0ebc","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"0","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/authors/","query":{}},"responseTime":10}}
response: [13:5:32:724 2.2.2019] >> { statusCode:200, responseTime:10 } {"meta":{"res":{"statusCode":200},"responseTime":10}}
info: MySQL (id:26) database disconected
info: MySQL (id:27) database connected
request: [13:5:32:720 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"9916c332-0801-4956-9d44-02dcba1df6f1","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"0","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":12}}
response: [13:5:32:724 2.2.2019] >> { statusCode:500, responseTime:12 } {"meta":{"res":{"statusCode":500},"responseTime":12}}
error: Query error >> ER_BAD_NULL_ERROR: Column 'author_id' cannot be null {"json":{"type":"Query error","message":"ER_BAD_NULL_ERROR: Column 'author_id' cannot be null","name":"Error","stack":"Error: ER_BAD_NULL_ERROR: Column 'author_id' cannot be null\n    at Query.Sequence._packetToError (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:108:20)\n    at Query.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"ER_BAD_NULL_ERROR","errno":1048,"sqlMessage":"Column 'author_id' cannot be null","sqlState":"23000","index":0,"sql":"INSERT INTO books (name, author_id, year)\n      VALUES (NULL, NULL, NULL)"}}
info: MySQL (id:27) database disconected
info: MySQL (id:28) database connected
request: [13:5:32:720 2.2.2019] >> { method:POST, url:/books/ } {"meta":{"req":{"url":"/books/","headers":{"content-type":"application/json","cache-control":"no-cache","postman-token":"01c3240c-e853-42d2-99e0-dcc96ed4486e","user-agent":"PostmanRuntime/7.6.0","accept":"*/*","host":"localhost:3000","accept-encoding":"gzip, deflate","content-length":"5","connection":"keep-alive"},"method":"POST","httpVersion":"1.1","originalUrl":"/books/","query":{}},"responseTime":7}}
response: [13:5:32:724 2.2.2019] >> { statusCode:500, responseTime:7 } {"meta":{"res":{"statusCode":500},"responseTime":7}}
error: Query error >> ER_BAD_NULL_ERROR: Column 'author_id' cannot be null {"json":{"type":"Query error","message":"ER_BAD_NULL_ERROR: Column 'author_id' cannot be null","name":"Error","stack":"Error: ER_BAD_NULL_ERROR: Column 'author_id' cannot be null\n    at Query.Sequence._packetToError (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:47:14)\n    at Query.ErrorPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:77:18)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)\n    at Protocol.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:38:16)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:91:28)\n    at Socket.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Socket.emit (events.js:182:13)\n    at addChunk (_stream_readable.js:283:12)\n    at readableAddChunk (_stream_readable.js:264:11)\n    --------------------\n    at Protocol._enqueue (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:144:48)\n    at Connection.query (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:200:25)\n    at Query.connection.beginTransaction.err (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\services\\index.js:108:20)\n    at Query.<anonymous> (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:502:10)\n    at Query._callback (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\Connection.js:468:16)\n    at Query.Sequence.end (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Sequence.js:83:24)\n    at Query._handleFinalResultPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:139:8)\n    at Query.OkPacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\sequences\\Query.js:72:10)\n    at Protocol._parsePacket (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Protocol.js:278:23)\n    at Parser.write (F:\\Workspace\\Camp\\node.js\\BookStoreAPI\\node_modules\\mysql\\lib\\protocol\\Parser.js:76:12)","code":"ER_BAD_NULL_ERROR","errno":1048,"sqlMessage":"Column 'author_id' cannot be null","sqlState":"23000","index":0,"sql":"INSERT INTO books (name, author_id, year)\n      VALUES (NULL, NULL, NULL)"}}
info: MySQL (id:28) database disconected
